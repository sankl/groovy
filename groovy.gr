// default Groovy version to use
def version = "1.8.0"
if (args[0] == '-use') {
    version = args[1]
    args = args[2..-1]
}

// Where this script resides
def base = new File(getClass().protectionDomain.codeSource.location.path).parent

// Enable Grapes logging
System.properties['groovy.grape.report.downloads'] = "true"
// Put fetched Grapes near this script
System.properties['grape.root'] = base
// Use UTF-8 everywhere
System.properties['file.encoding'] = "utf8"

// If there is ./lib in CWD, load all jars from there
def loader
if (new File('lib').with { exists() && isDirectory() }) {
    def lc = new org.codehaus.groovy.tools.LoaderConfiguration(requireMain:false)
    lc.configure(new ByteArrayInputStream("""
        load lib/
        load lib/*.jar
        load lib/**/*.jar
        """.getBytes()))
    loader = new org.codehaus.groovy.tools.RootLoader(lc)
} else {
    loader = new org.codehaus.groovy.tools.RootLoader(new URL[0], null)
}
loader.addURL(new File(".").toURI().toURL())
loader.addURL(new File("${base}/lib/ivy-${org.apache.ivy.Ivy.ivyVersion}.jar").toURI().toURL())

import static groovy.grape.Grape.grab
(GroovySystem.version != version) &&
    // fetch required version of Groovy
    grab(group:'org.codehaus.groovy', module:'groovy-all', version:version, classLoader:loader) ||
    // or use one we have bootstrapped from
    loader.addURL(new File("${base}/boot/groovy-all-${GroovySystem.version}.jar").toURI().toURL())

//println "CLASSPATH: " + loader.getURLs()
loader.loadClass("groovy.lang.GroovyShell", true).main(args as String[])
